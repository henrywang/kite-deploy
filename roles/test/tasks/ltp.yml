---
- name: install ltp
  dnf:
    name: "https://github.com/liangxiao1/rpmbuild_specs/releases/download/ltp-master-20191128/ltp-master-20191128.x86_64.rpm"
    state: present
  become: yes
  become_user: root
  register: install_result
  retries: 10
  until: install_result is success

- name: copy ltp skip case file to /opt/ltp
  copy:
    src: skip.ltp
    dest: /opt/ltp
  become: yes

- name: clean results and output folders
  file:
    path: "/opt/ltp/{{ item }}"
    state: absent
  loop:
    - results
    - output
  become: yes

- name: run ltp test
  command: "./runltp -p -q -f {{ item }} -o {{ item }}.console -l {{ item }}.result -S skip.ltp"
  become: yes
  become_user: root
  args:
    chdir: /opt/ltp/
  loop:
    - commands
    - connectors
    # - cpuhotplug
    # - crypto
    # - dio
    # - fcntl-locktests
    # - fs
    # - fs_bind
    # - fs_perms_simple
    # - fsx
    # - hugetlb
    # - hyperthreading
    # - input
    # - ipc
    # - math
    # - mm
    # - nptl
    # - power_management_tests
    # - sched
    # - syscalls
    # - uevent
    # - net.tcp_cmds
    # - net.ipv6
    # - net_stress.interface
  register: ltp_results
  ignore_errors: True

- name: show ltp_results
  debug:
    var: ltp_results

- name: set passed result
  set_fact:
    ltp_result: "PASS"

- name: set failed result
  set_fact:
    ltp_result: "FAIL"
  when:
    - ltp_results.failed is defined
    - ltp_results.failed == "failed"

- name: fetch log and result folder back
  synchronize:
    mode: pull
    src: "/opt/ltp/{{ item }}"
    dest: "{{ playbook_dir }}"
  loop:
    - results
    - output

- name: write ltp report
  template:
    src: ltp_report.j2
    dest: ltp.report
  delegate_to: localhost

- name: write result to ltp.result file
  copy:
    content: "{{ ltp_result }}"
    dest: ltp.result
  delegate_to: localhost
